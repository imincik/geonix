name: Build flake templates

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-templates:
    strategy:
      fail-fast: false
      matrix:
        template:
          - python-app
        os:
          - ubuntu-22.04
          - macos-11

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install nix
      uses: cachix/install-nix-action@v18

    - name: Set new project directory
      run: |
        echo "TEMPLATE_PROJECT_DIR=$(dirname $GITHUB_WORKSPACE)/template-project" >> $GITHUB_ENV

    - name: Prepare new project directory
      run: |
        mkdir $TEMPLATE_PROJECT_DIR

    - name: Create new flake project
      run: |
        git init

        nix flake init --accept-flake-config --template ${GITHUB_WORKSPACE}#${{ matrix.template }}

        git add flake.nix
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Point Geonix input to the local source code directory
      run: |
        sed -i.orig "s|inputs.geonix.url = \".*\";|inputs.geonix.url = \"path:${GITHUB_WORKSPACE}\";|" flake.nix

        nix --access-tokens github.com=${{ secrets.GITHUB_TOKEN }} flake lock --update-input geonix
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Flake check
      run: >
        nix flake check --no-build --accept-flake-config
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Build template
      run: >
        nix build --accept-flake-config
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}


    # Docker is not available on MacOS runners. Containers tests are performed
    # only on Linux.
    - name: Test template build output (if Linux and python-app template)
      run: |
        docker load < result

        docker run -d -p 5000:5000 geonix-python-app

        curl --retry 10 --retry-all-errors localhost:5000 | grep POLYGON
      if: ${{ runner.os == 'Linux' && matrix.template == 'python-app' }}
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Test template build output (if MacOS and python-app template)
      run: |
        nix develop --accept-flake-config --command poetry install

        nix develop --accept-flake-config --command poetry run flask run &

        curl --retry 10 --retry-all-errors localhost:5000 | grep POLYGON
      if: ${{ runner.os == 'macOS' && matrix.template == 'python-app' }}
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}
